name: Daily android

on:
  schedule:
    - cron: '1 1 * 1 *'
jobs:
  daily-android:
    runs-on: ubuntu-latest
    env:
      working-directory: ./ws/packages/unitz-mobile-advisor
      codepush-appname: Unitz/Unitz-Advisor-Android
      codepush-deployment: Staging
    steps:
      - name: setup node v14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - name: cleanup
        run: |
          rm -Rf ./*
      - name: clone workspace
        uses: actions/checkout@v2
        with:
          repository: Unitz-Co/ws-app-mobile
          path: ws
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true
      - name: clone env
        uses: actions/checkout@v2
        with:
          repository: Unitz-Co/env-app-mobile
          path: config/env-app-mobile
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true
      - name: clone credentials
        uses: actions/checkout@v2
        with:
          repository: Unitz-Co/credentials
          path: config/credentials
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true
      - name: clone config
        uses: actions/checkout@v2
        with:
          repository: Unitz-Co/ws-scripts
          path: config/ws-scripts
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true
      - name: checkout submodule
        run: |
          cd ws
          git config --file .gitmodules --get-regexp url | while read url; do
            git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ secrets.PAT_TOKEN }}:${{ secrets.PAT_TOKEN }}@github.com\//")
          done
          git submodule sync
          git submodule update --init --recursive --remote --force
      - name: retrive certs and env
        working-directory: ${{env.working-directory}}
        run: |
          yarn config:android
      - name: check dir
        working-directory: ${{env.working-directory}}
        run: |
          PWD=$(pwd)
      - uses: actions/cache@v2
        id: cachenodemodules
        with:
          path: |
            ${{env.working-directory}}/node_modules
            ./ws/node_modules
          key: ${{ runner.os }}14nodemodules-${{ hashFiles('**/yarn.lock', '**/package-lock.json', '**/package.json', '**/*.patch') }}
      - name: build modules
        working-directory: ${{env.working-directory}}
        if: steps.cachenodemodules.outputs.cache-hit != 'true'
        run: |
          pwd
          yarn install
          yarn nuke:modules
      - name: install appcenter
        working-directory: ${{env.working-directory}}
        run: |
          npm install -g appcenter-cli
      - name: Create codepush Build
        working-directory: ${{env.working-directory}}
        env:
          APPCENTER_ACCESS_TOKEN: ${{ secrets.APPCENTER_ACCESS_TOKEN }}
        run: |
          source ../../../config/ws-scripts/sm/num.sh
          echo "BUILD_NUMBER_CUR: $BUILD_NUMBER_CUR"
          sed -i -e '/^JSBUNDLE_NUMBER=/s/=.*/='$BUILD_NUMBER_CUR'/g' env/US.env
          appcenter codepush release-react -t $(node -p -e "require('./package.json').version") -a ${{env.codepush-appname}} -d ${{env.codepush-deployment}} --description "${BUILD_NUMBER_CUR}"
          cd ../..
      - uses: iRoachie/slack-github-actions@v2.3.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          status: ${{ job.status }}
        if: ${{ always() }}
